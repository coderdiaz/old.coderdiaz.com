---
import { Image } from 'astro:assets';
import { cn } from '@/lib/utils';

type Props = {
  class?: string;
  item?: any;
}

const { class: className, item } = Astro.props;
const services = item.data.services.slice(0, 2);
---
<div class={cn('sticky top-[4rem] overflow-hidden', className)}>
  <a href={`/${item.slug}/`} class="project relative w-full h-full bg-white group">
    <article class="flex flex-col gap-1.5 bg-white shadow-sm p-1.5 rounded-2xl overflow-hidden">
      <div class="flex justify-between items-center px-4 py-2 rounded-t-xl" style={{ backgroundColor: item.data.color ? item.data.color :  '#FFA36F'}}>
        <div class="hidden w-[12rem] text-left text-sm md:flex gap-2 items-center">
          {services.map((value: string, index: number) => (
            <>
              <span class="w-max">{value}</span>
              {index !== services.length - 1 && <span class="w-0.5 h-1.5 rounded-full bg-black/30" />}
            </>
          ))}
        </div>
        <h3 class="font-display font-medium text-lg tracking-tight">{item.data.client}</h3>
        <span class="md:w-[12rem] text-right text-sm">{item.data.year}</span>
      </div>
      <div class="h-[30rem] grid md:grid-cols-2 gap-1.5 group-hover:opacity-80 transition-opacity">
        <div class="hidden md:block rounded-2xl overflow-hidden h-full">
          <Image class="object-cover object-center w-full h-full rounded-xl" src={item.data.images[0]} alt="" />
        </div>
        <div class="flex flex-col gap-1.5 min-h-full w-full">
          <div class="relative h-full overflow-hidden rounded-2xl">
            <Image class="object-cover w-full h-full" src={item.data.images[1]} alt="" />
          </div>
          <div class="relative rounded-2xl overflow-hidden h-full">
            <Image class="object-cover object-top w-full h-full" src={item.data.images[2]} alt="" />
          </div>
        </div>
      </div>
    </article>
  </a>
</div>